enum Nested {
	Number(uint32)
}

enum Error {
	FailureX
}

enum MyScaleEncodedEnum {
	Single
    Int(uint64)
    Bool(bool)
	A(Option<bool>)
	B(Result<uint64, uint64>)
	G((uint64, bool))
	H(Option<(uint64, bool)>)
	J(Result<(uint64, bool), bool>)
	K((Option<bool>, Result<bool, bool>))
	L(Result<Option<(uint64, bool)>, uint64>)
	M(Option<Nested>)
	N(Result<Nested, bool>)
	O(Result<bool, Nested>)
	P(Result<Nested, Error>)
	Q((Nested,uint64,Error)),
	R((Result<uint64, bool>, Option<uint64>, Error))
}
